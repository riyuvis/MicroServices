apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: microservices
  labels:
    app.kubernetes.io/name: app-config
    app.kubernetes.io/instance: devsecops
    app.kubernetes.io/component: configmap
data:
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  API_VERSION: "v1"
  CORS_ORIGIN: "*"
  RATE_LIMIT_WINDOW_MS: "900000"
  RATE_LIMIT_MAX_REQUESTS: "100"
  JWT_EXPIRES_IN: "24h"
  BCRYPT_ROUNDS: "12"
  DATABASE_POOL_MIN: "2"
  DATABASE_POOL_MAX: "10"
  CACHE_TTL: "3600"
  MONITORING_ENABLED: "true"
  SECURITY_HEADERS_ENABLED: "true"
  BEDROCK_MODEL_ID: "anthropic.claude-3-sonnet-20240229-v1:0"
  BEDROCK_REGION: "us-east-1"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-config
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring-config
    app.kubernetes.io/instance: devsecops
    app.kubernetes.io/component: configmap
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "alert_rules.yml"
    
    scrape_configs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
