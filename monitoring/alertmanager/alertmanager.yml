global:
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alertmanager@devsecops.example.com'
  smtp_auth_username: 'alertmanager@devsecops.example.com'
  smtp_auth_password: 'password'
  smtp_require_tls: true

# The directory from which notification templates are read.
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# The root route on which each condition comes in.
route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'web.hook'
  routes:
  - match:
      severity: critical
    receiver: 'critical-alerts'
    group_wait: 5s
    repeat_interval: 5m
  - match:
      severity: warning
    receiver: 'warning-alerts'
    group_wait: 30s
    repeat_interval: 30m
  - match:
      service: bedrock
    receiver: 'bedrock-alerts'
  - match:
      service: kubernetes
    receiver: 'k8s-alerts'
  - match:
      namespace: microservices
    receiver: 'microservices-alerts'

# Inhibition rules allow to mute a set of alerts given that another alert is
# firing.
inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']
  - source_match:
      alertname: 'NodeDown'
    target_match:
      alertname: 'ServiceDown'
    equal: ['instance']

receivers:
- name: 'web.hook'
  webhook_configs:
  - url: 'http://127.0.0.1:5001/'

- name: 'critical-alerts'
  email_configs:
  - to: 'devops-team@devsecops.example.com'
    subject: '[CRITICAL] DevSecOps Alert: {{ .GroupLabels.alertname }}'
    body: |
      {{ range .Alerts }}
      Alert: {{ .Annotations.summary }}
      Description: {{ .Annotations.description }}
      Severity: {{ .Labels.severity }}
      Service: {{ .Labels.service }}
      Instance: {{ .Labels.instance }}
      Time: {{ .StartsAt }}
      {{ end }}
  slack_configs:
  - api_url: 'YOUR_SLACK_WEBHOOK_URL'
    channel: '#devsecops-critical'
    title: 'Critical Alert: {{ .GroupLabels.alertname }}'
    text: |
      {{ range .Alerts }}
      *Alert:* {{ .Annotations.summary }}
      *Description:* {{ .Annotations.description }}
      *Severity:* {{ .Labels.severity }}
      *Service:* {{ .Labels.service }}
      *Instance:* {{ .Labels.instance }}
      *Time:* {{ .StartsAt }}
      {{ end }}
  pagerduty_configs:
  - routing_key: 'YOUR_PAGERDUTY_ROUTING_KEY'
    description: 'Critical Alert: {{ .GroupLabels.alertname }}'
    details:
      summary: '{{ .Annotations.summary }}'
      description: '{{ .Annotations.description }}'
      severity: '{{ .Labels.severity }}'
      service: '{{ .Labels.service }}'

- name: 'warning-alerts'
  email_configs:
  - to: 'devops-team@devsecops.example.com'
    subject: '[WARNING] DevSecOps Alert: {{ .GroupLabels.alertname }}'
    body: |
      {{ range .Alerts }}
      Alert: {{ .Annotations.summary }}
      Description: {{ .Annotations.description }}
      Severity: {{ .Labels.severity }}
      Service: {{ .Labels.service }}
      Instance: {{ .Labels.instance }}
      Time: {{ .StartsAt }}
      {{ end }}
  slack_configs:
  - api_url: 'YOUR_SLACK_WEBHOOK_URL'
    channel: '#devsecops-warnings'
    title: 'Warning Alert: {{ .GroupLabels.alertname }}'
    text: |
      {{ range .Alerts }}
      *Alert:* {{ .Annotations.summary }}
      *Description:* {{ .Annotations.description }}
      *Severity:* {{ .Labels.severity }}
      *Service:* {{ .Labels.service }}
      *Instance:* {{ .Labels.instance }}
      *Time:* {{ .StartsAt }}
      {{ end }}

- name: 'bedrock-alerts'
  email_configs:
  - to: 'ai-team@devsecops.example.com'
    subject: '[BEDROCK] AWS Bedrock Alert: {{ .GroupLabels.alertname }}'
    body: |
      {{ range .Alerts }}
      Alert: {{ .Annotations.summary }}
      Description: {{ .Annotations.description }}
      Model: {{ .Labels.model }}
      Region: {{ .Labels.region }}
      Time: {{ .StartsAt }}
      {{ end }}
  slack_configs:
  - api_url: 'YOUR_SLACK_WEBHOOK_URL'
    channel: '#ai-security'
    title: 'Bedrock Alert: {{ .GroupLabels.alertname }}'
    text: |
      {{ range .Alerts }}
      *Alert:* {{ .Annotations.summary }}
      *Description:* {{ .Annotations.description }}
      *Model:* {{ .Labels.model }}
      *Region:* {{ .Labels.region }}
      *Time:* {{ .StartsAt }}
      {{ end }}

- name: 'k8s-alerts'
  email_configs:
  - to: 'platform-team@devsecops.example.com'
    subject: '[K8S] Kubernetes Alert: {{ .GroupLabels.alertname }}'
    body: |
      {{ range .Alerts }}
      Alert: {{ .Annotations.summary }}
      Description: {{ .Annotations.description }}
      Namespace: {{ .Labels.namespace }}
      Pod: {{ .Labels.pod }}
      Node: {{ .Labels.node }}
      Time: {{ .StartsAt }}
      {{ end }}
  slack_configs:
  - api_url: 'YOUR_SLACK_WEBHOOK_URL'
    channel: '#kubernetes'
    title: 'Kubernetes Alert: {{ .GroupLabels.alertname }}'
    text: |
      {{ range .Alerts }}
      *Alert:* {{ .Annotations.summary }}
      *Description:* {{ .Annotations.description }}
      *Namespace:* {{ .Labels.namespace }}
      *Pod:* {{ .Labels.pod }}
      *Node:* {{ .Labels.node }}
      *Time:* {{ .StartsAt }}
      {{ end }}

- name: 'microservices-alerts'
  email_configs:
  - to: 'backend-team@devsecops.example.com'
    subject: '[MICROSERVICE] Service Alert: {{ .GroupLabels.alertname }}'
    body: |
      {{ range .Alerts }}
      Alert: {{ .Annotations.summary }}
      Description: {{ .Annotations.description }}
      Service: {{ .Labels.service }}
      Instance: {{ .Labels.instance }}
      Time: {{ .StartsAt }}
      {{ end }}
  slack_configs:
  - api_url: 'YOUR_SLACK_WEBHOOK_URL'
    channel: '#microservices'
    title: 'Microservice Alert: {{ .GroupLabels.alertname }}'
    text: |
      {{ range .Alerts }}
      *Alert:* {{ .Annotations.summary }}
      *Description:* {{ .Annotations.description }}
      *Service:* {{ .Labels.service }}
      *Instance:* {{ .Labels.instance }}
      *Time:* {{ .StartsAt }}
      {{ end }}
